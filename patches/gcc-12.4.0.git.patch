diff --git a/gcc/system.h b/gcc/system.h
index e10c34f70ec..e8727777674 100644
--- a/gcc/system.h
+++ b/gcc/system.h
@@ -56,8 +56,8 @@ along with GCC; see the file COPYING3.  If not see
    the names to 64bit capable functions for LARGE_FILES support. These
    redefs are pointless here so we can override them.  */

-#undef fopen
-#undef freopen
+#undef fopen
+#undef freopen

 #define fopen(PATH, MODE) fopen_unlocked (PATH, MODE)
 #define fdopen(FILDES, MODE) fdopen_unlocked (FILDES, MODE)
@@ -197,25 +197,6 @@ extern int fprintf_unlocked (FILE *, const char *, ...);
 /* Include <string> before "safe-ctype.h" to avoid GCC poisoning
    the ctype macros through safe-ctype.h */

-#ifdef __cplusplus
-#ifdef INCLUDE_STRING
-# include <string>
-#endif
-#endif
-
-/* There are an extraordinary number of issues with <ctype.h>.
-   The last straw is that it varies with the locale.  Use libiberty's
-   replacement instead.  */
-#include "safe-ctype.h"
-
-#include <sys/types.h>
-
-#include <errno.h>
-
-#if !defined (errno) && defined (HAVE_DECL_ERRNO) && !HAVE_DECL_ERRNO
-extern int errno;
-#endif
-
 #ifdef __cplusplus
 #if defined (INCLUDE_ALGORITHM) || !defined (HAVE_SWAP_IN_UTILITY)
 # include <algorithm>
@@ -229,6 +210,9 @@ extern int errno;
 #ifdef INCLUDE_SET
 # include <set>
 #endif
+#ifdef INCLUDE_STRING
+# include <string>
+#endif
 #ifdef INCLUDE_VECTOR
 # include <vector>
 #endif
@@ -236,7 +220,7 @@ extern int errno;
 # include <array>
 #endif
 #ifdef INCLUDE_FUNCTIONAL
-# include <functional>
+# include <functional>
 #endif
 # include <cstring>
 # include <initializer_list>
@@ -245,6 +229,19 @@ extern int errno;
 # include <type_traits>
 #endif

+/* There are an extraordinary number of issues with <ctype.h>.
+   The last straw is that it varies with the locale.  Use libiberty's
+   replacement instead.  */
+#include "safe-ctype.h"
+
+#include <sys/types.h>
+
+#include <errno.h>
+
+#if !defined (errno) && defined (HAVE_DECL_ERRNO) && !HAVE_DECL_ERRNO
+extern int errno;
+#endif
+
 /* Some of glibc's string inlines cause warnings.  Plus we'd rather
    rely on (and therefore test) GCC's string builtins.  */
 #define __NO_STRING_INLINES
@@ -403,7 +400,7 @@ extern int errno;

 /* This macro rounds x down to the y boundary.  */
 #define ROUND_DOWN(x,y) ((x) & ~((y) - 1))
-
+
 #ifdef HAVE_SYS_WAIT_H
 #include <sys/wait.h>
 #endif
