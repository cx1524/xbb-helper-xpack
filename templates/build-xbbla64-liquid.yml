{% render "xpacks/xpack-dev-tools-xbb-helper/templates/copyright-liquid.yml" %}

{% if platforms == "all" -%}
  {% assign platforms = "linux-x64,linux-arm64,linux-arm,darwin-x64,darwin-arm64,win32-x64" -%}
{% endif -%}
{% assign platforms = platforms | split: "," -%}

name: 'Build xPack {{ XBB_APPLICATION_NAME }} xbbla64'

on:
  workflow_dispatch:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      version:
        description: 'The semver of the release'
        required: false
        type: string
        default: 'current'
      xpm-version:
        description: 'The version of xpm to install'
        required: false
        type: string
        default: 'latest'
      xpm-install-loglevel:
        description: 'Optional loglevel for xpm install'
        required: false
        default: 'info'
        type: choice
        options:
        - silent
        - warn
        - info
        - verbose
        - debug
        - trace
      xpm-install-verbosity:
        description: 'Optional switches to pass to xpm install'
        required: false
        type: string
        default: ''

jobs:
{% for platform in platforms -%}
{% if platform == "linux-arm64" %}
  linux-arm64:
    name: 'Linux Arm 64 - {{ XBB_APPLICATION_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} build'
    timeout-minutes: 2880 # 2 days
    runs-on: [self-hosted, linux, arm64, xbbla64]
    container:
      image: ilegeul/ubuntu:arm64v8-18.04-xbb-v5.0.0
    defaults:
      run:
        shell: bash

    steps:
      - name: 'Environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          echo "node: $(node --version)"
          echo "npm: $(npm --version)"
          ls -lLA
          env | sort | egrep '^[^ \t]+='

      - name: 'Clean working area'
        run: rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 1

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: npm install --location=global xpm@{% raw %}${{ github.event.inputs.xpm-version }}{% endraw %}

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install {% raw %}${{ github.event.inputs.xpm-install-verbosity }}{% endraw %}

      - name: 'Build Linux arm64 binary'
        timeout-minutes: 1440
        run: |
          xpm install --config linux-arm64 {% raw %}${{ github.event.inputs.xpm-install-verbosity }}{% endraw %}
          xpm run build --config linux-arm64

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'build/linux-arm64/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: {% raw %}${{ secrets.PUBLISH_TOKEN }}{% endraw %}

      - name: 'Rename working area'
        # For just in case absolute paths remain unprocessed.
        run: mv -v build build-$(date -u +%Y%m%d-%H%M%S)
{% break -%}
{% endif -%}
{% endfor -%}
