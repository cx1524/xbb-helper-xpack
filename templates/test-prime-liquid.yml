
{% render "xpacks/@xpack-dev-tools/xbb-helper/templates/copyright-liquid.yml" %}

{% if platforms == "all" -%}
  {% assign platforms = "linux-x64,linux-arm64,linux-arm,darwin-x64,darwin-arm64,win32-x64" -%}
{% endif -%}
{% assign platforms = platforms | split: "," -%}

name: 'Test xPack {{ XBB_APPLICATION_NAME }} on supported platforms'

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'The folder part of the URL where binaries are stored'
        required: false
        default: 'release'
      version:
        description: 'The semver of the release'
        required: false
        default: 'current'
      helper-git-ref:
        description: 'The helper branch, tag or SHA to checkout'
        required: false
        default: 'xpack-develop'

jobs:
{% for platform in platforms -%}
  {% case platform -%}
  {% when "linux-x64" %}
  linux-x64:
    name: 'Linux x64 {{ XBB_APPLICATION_LOWER_CASE_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: ubuntu-22.04

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Checkout project'
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v3
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash scripts/test.sh --image github-actions-ubuntu-latest --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}
  {% when "linux-arm64" %}
  linux-arm64:
    name: 'Linux arm64 {{ XBB_APPLICATION_LOWER_CASE_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v3
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} docker test'
        uses: docker://ubuntu:22.04
        with:
          entrypoint: /bin/bash
          args: /github/workspace/scripts/test.sh --image ubuntu:22.04 --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}
  {% when "linux-arm" %}
  linux-arm32:
    name: 'Linux arm32 {{ XBB_APPLICATION_LOWER_CASE_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: [self-hosted, linux, arm, xbbla32]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v3
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} docker test'
        uses: docker://arm32v7/ubuntu:22.04
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/scripts/test.sh --image arm32v7/ubuntu:22.04 --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}
  {% when "darwin-x64" %}
  macos-x64:
    name: 'macOS x64 {{ XBB_APPLICATION_LOWER_CASE_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: macos-12

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          sw_vers
          sudo xcode-select --switch /Applications/Xcode_15.4.app
          xcode-select --print-path
          xcodebuild -version || true
          pkgutil --pkg-info=com.apple.pkg.CLTools_Executables || true
          ls -lA /Library/Developer/CommandLineTools/SDKs || true
          ls -lA /Applications
          clang++ -v
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v3
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash scripts/test.sh --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}
  {% when "darwin-arm64" %}
  macos-arm64:
    name: 'macOS arm64 {{ XBB_APPLICATION_LOWER_CASE_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: macos-14

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          sw_vers
          sudo xcode-select --switch /Applications/Xcode_15.4.app
          xcode-select --print-path
          xcodebuild -version || true
          pkgutil --pkg-info=com.apple.pkg.CLTools_Executables || true
          ls -lA /Library/Developer/CommandLineTools/SDKs || true
          ls -lA /Applications
          clang++ -v
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v3
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash scripts/test.sh --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}
  {% when "win32-x64" %}
  windows-x64:
    name: 'Windows x64 {{ XBB_APPLICATION_LOWER_CASE_NAME }} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: windows-2022
    defaults:
      run:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
        shell: bash # for --

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          systeminfo # lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v3
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash scripts/test.sh --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}
  {% endcase -%}
{% endfor %}
# -----------------------------------------------------------------------------
